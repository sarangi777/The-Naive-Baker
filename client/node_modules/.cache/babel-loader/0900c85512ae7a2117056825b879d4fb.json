{"ast":null,"code":"import _classCallCheck from \"/Users/sarangipatel/Downloads/Naive-Baker-master-2/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sarangipatel/Downloads/Naive-Baker-master-2/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/sarangipatel/Downloads/Naive-Baker-master-2/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/sarangipatel/Downloads/Naive-Baker-master-2/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/sarangipatel/Downloads/Naive-Baker-master-2/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/sarangipatel/Downloads/Naive-Baker-master-2/client/src/containers/NewRecipe/NewRecipe.js\";\nimport React, { Component } from 'react';\nimport classes from './NewRecipe.css';\nimport { Redirect } from 'react-router-dom';\nimport { variables } from '../NaiveBaker/NaiveBaker';\nimport axios from 'axios';\n\nvar NewRecipe =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(NewRecipe, _Component);\n\n  function NewRecipe() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, NewRecipe);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(NewRecipe)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      title: '',\n      ingredient: '',\n      category: 'VEG',\n      mealType: 'BREAKFAST',\n      cookingTime: 60,\n      calories: 0.0,\n      imageLink: '',\n      cuisine: '',\n      description: '',\n      procedure: '',\n      userid: variables.userID\n    };\n\n    _this.postDataHandler = function () {\n      axios.post('/newrecipe', _this.state);\n    };\n\n    return _this;\n  }\n\n  _createClass(NewRecipe, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"fragment\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(\"link\", {\n        href: \"https://fonts.googleapis.com/css?family=Concert One\",\n        rel: \"stylesheet\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }), React.createElement(\"link\", {\n        href: \"https://fonts.googleapis.com/css?family=Dancing Script\",\n        rel: \"stylesheet\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }), React.createElement(\"link\", {\n        href: \"https://fonts.googleapis.com/css?family=Fira Sans\",\n        rel: \"stylesheet\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: classes.NewPost,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: [classes.wrapper, classes.fadeIn].join(' '),\n        style: {\n          maxWidth: '600px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: classes.heading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, \"Add a Recipe\"), React.createElement(\"h4\", {\n        className: classes.subtext,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, \"Go ahead and add your own recipe !\"), React.createElement(\"label\", {\n        className: classes.sub,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \"Title\"), React.createElement(\"input\", {\n        className: classes.inputTextType,\n        type: \"text\",\n        value: this.state.title,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            title: event.target.value\n          });\n        },\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        className: classes.sub,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"Ingredients\"), React.createElement(\"input\", {\n        className: classes.inputTextType,\n        type: \"text\",\n        value: this.state.ingredient,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            ingredient: event.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        className: classes.sub,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"Category\"), React.createElement(\"select\", {\n        className: classes.inputTextType,\n        value: this.state.category,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            category: event.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"VEG\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, \"Veg\"), React.createElement(\"option\", {\n        value: \"NON-VEG\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"NON-Veg\"), React.createElement(\"option\", {\n        value: \"CONTAINS-EGGS\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"Contains-EGGS\"), React.createElement(\"option\", {\n        value: \"VEGAN\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"VEGAN\")), React.createElement(\"label\", {\n        className: classes.sub,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"Meal Type\"), React.createElement(\"select\", {\n        className: classes.inputTextType,\n        value: this.state.mealType,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            mealType: event.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"BREAKFAST\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"Breakfast\"), React.createElement(\"option\", {\n        value: \"LUNCH\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \"Lunch\"), React.createElement(\"option\", {\n        value: \"DINNER\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"Dinner\")), React.createElement(\"label\", {\n        className: classes.sub,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"Cooking Time\", React.createElement(\"em\", {\n        style: {\n          fontWeight: '100'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"(in minutes)\")), React.createElement(\"input\", {\n        className: classes.inputTextType,\n        type: \"number\",\n        value: this.state.cookingTime,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            cookingTime: event.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        className: classes.sub,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"Calories\"), React.createElement(\"input\", {\n        className: classes.inputTextType,\n        type: \"number\",\n        value: this.state.calories,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            calories: event.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        className: classes.sub,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"Cuisine\"), React.createElement(\"input\", {\n        className: classes.inputTextType,\n        type: \"text\",\n        value: this.state.cuisine,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            cuisine: event.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        className: classes.sub,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"Image Link\"), React.createElement(\"input\", {\n        className: classes.inputTextType,\n        type: \"text\",\n        value: this.state.imageLink,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            imageLink: event.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        className: classes.sub,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"Procedure\"), React.createElement(\"textarea\", {\n        className: classes.inputTextType,\n        rows: \"4\",\n        value: this.state.procedure,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            procedure: event.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        className: classes.sub,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"Description\"), React.createElement(\"textarea\", {\n        className: classes.inputTextType,\n        rows: \"4\",\n        value: this.state.description,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            description: event.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: classes.inputSubmitType,\n        onClick: this.postDataHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"Add Recipe\"))));\n    }\n  }]);\n\n  return NewRecipe;\n}(Component);\n\nexport default NewRecipe;","map":{"version":3,"sources":["/Users/sarangipatel/Downloads/Naive-Baker-master-2/client/src/containers/NewRecipe/NewRecipe.js"],"names":["React","Component","classes","Redirect","variables","axios","NewRecipe","state","title","ingredient","category","mealType","cookingTime","calories","imageLink","cuisine","description","procedure","userid","userID","postDataHandler","post","NewPost","wrapper","fadeIn","join","maxWidth","heading","subtext","sub","inputTextType","event","setState","target","value","fontWeight","inputSubmitType"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport classes from './NewRecipe.css';\nimport { Redirect } from 'react-router-dom';\nimport { variables } from '../NaiveBaker/NaiveBaker';\nimport axios from 'axios';\n\nclass NewRecipe extends Component {\n    state = {\n        title: '',\n        ingredient: '',\n        category:'VEG',\n        mealType:'BREAKFAST',\n        cookingTime:60,\n        calories:0.0,\n        imageLink:'',\n        cuisine:'',\n        description:'',\n        procedure:'',\n        userid:variables.userID\n    }\n\n    postDataHandler = () => {\n        axios.post('/newrecipe',this.state);\n    }\n\n    render () {\n\n        return (\n            <fragment>\n            <link href='https://fonts.googleapis.com/css?family=Concert One' rel='stylesheet'></link>\n            <link href='https://fonts.googleapis.com/css?family=Dancing Script' rel='stylesheet'></link>\n            <link href='https://fonts.googleapis.com/css?family=Fira Sans' rel='stylesheet'></link>\n            <div className={classes.NewPost}>\n             <div className={[classes.wrapper,classes.fadeIn].join(' ')} style={{maxWidth:'600px'}}>\n                <h1 className={classes.heading}>Add a Recipe</h1>\n                <h4 className={classes.subtext}>Go ahead and add your own recipe !</h4>\n                <label className={classes.sub}>Title</label>\n                <input className={classes.inputTextType} type=\"text\" value={this.state.title} onChange={(event) => this.setState({title: event.target.value})} required/>\n                <label className={classes.sub}>Ingredients</label>\n                <input className={classes.inputTextType} type=\"text\" value={this.state.ingredient} onChange={(event) => this.setState({ingredient: event.target.value})} />\n                <label className={classes.sub}>Category</label>\n                <select className={classes.inputTextType} value={this.state.category} onChange={( event ) => this.setState( { category: event.target.value } )}>\n                    <option value=\"VEG\">Veg</option>\n                    <option value=\"NON-VEG\">NON-Veg</option>\n                    <option value=\"CONTAINS-EGGS\">Contains-EGGS</option>\n                    <option value=\"VEGAN\">VEGAN</option>\n                </select>\n                <label className={classes.sub}>Meal Type</label>\n                <select className={classes.inputTextType} value={this.state.mealType} onChange={( event ) => this.setState( { mealType: event.target.value } )}>\n                    <option value=\"BREAKFAST\">Breakfast</option>\n                    <option value=\"LUNCH\">Lunch</option>\n                    <option value=\"DINNER\">Dinner</option>\n                </select>\n                <label className={classes.sub}>Cooking Time<em style={{fontWeight:'100'}}>(in minutes)</em></label>\n                <input className={classes.inputTextType} type=\"number\" value={this.state.cookingTime} onChange={(event) => this.setState({cookingTime: event.target.value})} />\n                <label className={classes.sub}>Calories</label>\n                <input className={classes.inputTextType} type=\"number\" value={this.state.calories} onChange={(event) => this.setState({calories: event.target.value})} />\n                <label className={classes.sub}>Cuisine</label>\n                <input className={classes.inputTextType} type=\"text\" value={this.state.cuisine} onChange={(event) => this.setState({cuisine: event.target.value})} />\n                <label className={classes.sub}>Image Link</label>\n                <input className={classes.inputTextType} type=\"text\" value={this.state.imageLink} onChange={(event) => this.setState({imageLink: event.target.value})} />\n                <label className={classes.sub}>Procedure</label>\n                <textarea className={classes.inputTextType} rows=\"4\" value={this.state.procedure} onChange={(event) => this.setState({procedure: event.target.value})} />\n                <label className={classes.sub}>Description</label>\n                <textarea className={classes.inputTextType} rows=\"4\" value={this.state.description} onChange={(event) => this.setState({description: event.target.value})} />\n                <button className={classes.inputSubmitType} onClick={this.postDataHandler}>Add Recipe</button>\n                \n                 </div>\n                \n            </div>\n            </fragment>\n        );\n    }\n}\n\nexport default NewRecipe;"]},"metadata":{},"sourceType":"module"}