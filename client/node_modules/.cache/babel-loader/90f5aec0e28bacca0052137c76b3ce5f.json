{"ast":null,"code":"import _classCallCheck from \"/Users/sarangipatel/Downloads/Naive-Baker-master-2/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sarangipatel/Downloads/Naive-Baker-master-2/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/sarangipatel/Downloads/Naive-Baker-master-2/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/sarangipatel/Downloads/Naive-Baker-master-2/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/sarangipatel/Downloads/Naive-Baker-master-2/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/sarangipatel/Downloads/Naive-Baker-master-2/client/src/Search/Autocomplete.jsx\";\nimport React, { Component, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport classes from './style.css';\n\nvar Autocomplete =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Autocomplete, _Component);\n\n  function Autocomplete(props) {\n    var _this;\n\n    _classCallCheck(this, Autocomplete);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Autocomplete).call(this, props));\n\n    _this.onChange = function (e) {\n      var suggestions = _this.props.suggestions;\n      var userInput = e.currentTarget.value;\n      var filteredSuggestions = [];\n      var newSuggestions = [];\n\n      for (var i = 0; i < suggestions.length; i++) {\n        if (suggestions[i].toLowerCase().indexOf(userInput.toLowerCase()) !== -1) {\n          newSuggestions.push([suggestions[i].toLowerCase().indexOf(userInput.toLowerCase()), suggestions[i]]);\n        }\n      }\n\n      newSuggestions.sort();\n\n      for (i = 0; i < newSuggestions.length; i++) {\n        filteredSuggestions.push(newSuggestions[i][1]);\n      }\n\n      _this.setState({\n        activeSuggestion: 0,\n        filteredSuggestions: filteredSuggestions,\n        showSuggestions: true,\n        userInput: e.currentTarget.value\n      });\n    };\n\n    _this.onClick = function (e) {\n      _this.setState({\n        activeSuggestion: 0,\n        filteredSuggestions: [],\n        showSuggestions: false,\n        userInput: e.currentTarget.innerText\n      });\n    };\n\n    _this.onKeyDown = function (e) {\n      var _this$state = _this.state,\n          activeSuggestion = _this$state.activeSuggestion,\n          filteredSuggestions = _this$state.filteredSuggestions; // User pressed the enter key\n\n      if (e.keyCode === 13) {\n        var temp = _this.state.selectedIngredients;\n        if (!temp.includes(filteredSuggestions[activeSuggestion])) temp.push(filteredSuggestions[activeSuggestion]);\n\n        _this.setState({\n          activeSuggestion: 0,\n          showSuggestions: false,\n          userInput: filteredSuggestions[activeSuggestion],\n          selectedIngredients: temp\n        });\n      } // User pressed the up arrow\n      else if (e.keyCode === 38) {\n          if (activeSuggestion === 0) {\n            return;\n          }\n\n          _this.setState({\n            activeSuggestion: activeSuggestion - 1\n          });\n        } // User pressed the down arrow\n        else if (e.keyCode === 40) {\n            if (activeSuggestion - 1 === filteredSuggestions.length) {\n              return;\n            }\n\n            _this.setState({\n              activeSuggestion: activeSuggestion + 1\n            });\n          }\n    };\n\n    _this.deleteIngredientHandler = function (ingredientToDelete) {\n      var temp = _this.state.selectedIngredients;\n      temp.splice(ingredientToDelete, 1);\n\n      _this.setState({\n        selectedIngredients: temp\n      });\n    };\n\n    _this.state = {\n      activeSuggestion: 0,\n      filteredSuggestions: [],\n      showSuggestions: false,\n      userInput: \"\",\n      selectedIngredients: []\n    };\n    return _this;\n  }\n\n  _createClass(Autocomplete, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var onChange = this.onChange,\n          onClick = this.onClick,\n          onKeyDown = this.onKeyDown,\n          _this$state2 = this.state,\n          activeSuggestion = _this$state2.activeSuggestion,\n          filteredSuggestions = _this$state2.filteredSuggestions,\n          showSuggestions = _this$state2.showSuggestions,\n          userInput = _this$state2.userInput;\n      var suggestionsListComponent;\n\n      if (showSuggestions && userInput) {\n        if (filteredSuggestions.length) {\n          suggestionsListComponent = React.createElement(\"center\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 118\n            },\n            __self: this\n          }, React.createElement(\"ul\", {\n            className: classes.suggestions,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 118\n            },\n            __self: this\n          }, filteredSuggestions.map(function (suggestion, index) {\n            var className; // Flag the active suggestion with a class\n\n            if (index === activeSuggestion) {\n              className = classes.suggestionactive;\n            }\n\n            return React.createElement(\"div\", {\n              key: suggestion,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 127\n              },\n              __self: this\n            }, React.createElement(\"li\", {\n              className: className,\n              onClick: onClick,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 128\n              },\n              __self: this\n            }, suggestion));\n          })));\n        } else {\n          suggestionsListComponent = React.createElement(\"div\", {\n            className: classes.nosuggestions,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 138\n            },\n            __self: this\n          }, React.createElement(\"center\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 139\n            },\n            __self: this\n          }, React.createElement(\"em\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 139\n            },\n            __self: this\n          }, \"No suggestions, you're on your own!\")));\n        }\n      }\n\n      var printSelectedIngredients = React.createElement(\"ul\", {\n        style: {\n          listStyle: 'none'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, this.state.selectedIngredients.map(function (suggestion, index) {\n        return React.createElement(\"li\", {\n          onClick: function onClick() {\n            return _this2.deleteIngredientHandler(index);\n          },\n          key: suggestion,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147\n          },\n          __self: this\n        }, suggestion);\n      }));\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(\"link\", {\n        rel: \"stylesheet\",\n        href: \"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }), React.createElement(\"center\", {\n        className: classes.centerclass,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        onChange: onChange,\n        onKeyDown: onKeyDown,\n        value: userInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-search\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      })), suggestionsListComponent, React.createElement(\"div\", {\n        className: classes.selected,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, \"Selected Ingredients\"), printSelectedIngredients)));\n    }\n  }]);\n\n  return Autocomplete;\n}(Component);\n\nAutocomplete.propTypes = {\n  suggestions: PropTypes.instanceOf(Array)\n};\nAutocomplete.defaultProps = {\n  suggestions: []\n};\nexport default Autocomplete;","map":{"version":3,"sources":["/Users/sarangipatel/Downloads/Naive-Baker-master-2/client/src/Search/Autocomplete.jsx"],"names":["React","Component","Fragment","PropTypes","classes","Autocomplete","props","onChange","e","suggestions","userInput","currentTarget","value","filteredSuggestions","newSuggestions","i","length","toLowerCase","indexOf","push","sort","setState","activeSuggestion","showSuggestions","onClick","innerText","onKeyDown","state","keyCode","temp","selectedIngredients","includes","deleteIngredientHandler","ingredientToDelete","splice","suggestionsListComponent","map","suggestion","index","className","suggestionactive","nosuggestions","printSelectedIngredients","listStyle","centerclass","selected","propTypes","instanceOf","Array","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport classes from './style.css';\n\nclass Autocomplete extends Component {\n  static propTypes = {\n    suggestions: PropTypes.instanceOf(Array)\n  };\n\n  static defaultProps = {\n    suggestions: []\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      activeSuggestion: 0,\n      filteredSuggestions: [],\n      showSuggestions: false,\n      userInput: \"\",\n      selectedIngredients: []\n    };\n  }\n\n  onChange = e => {\n    const { suggestions } = this.props;\n    const userInput = e.currentTarget.value;\n\n    let filteredSuggestions = [];\n    let newSuggestions=[];\n    for(var i=0; i<suggestions.length; i++)\n    {\n      if(suggestions[i].toLowerCase().indexOf(userInput.toLowerCase()) !== -1)\n      {\n        newSuggestions.push([suggestions[i].toLowerCase().indexOf(userInput.toLowerCase()),suggestions[i]]);\n      }\n    }\n    newSuggestions.sort();\n    for(i=0; i<newSuggestions.length; i++)\n    {\n      filteredSuggestions.push(newSuggestions[i][1]);\n    }\n    this.setState({\n      activeSuggestion: 0,\n      filteredSuggestions,\n      showSuggestions: true,\n      userInput: e.currentTarget.value\n    });\n  };\n\n  onClick = e => {\n    this.setState({\n      activeSuggestion: 0,\n      filteredSuggestions: [],\n      showSuggestions: false,\n      userInput: e.currentTarget.innerText\n    });\n  };\n\n  onKeyDown = e => {\n    const { activeSuggestion, filteredSuggestions } = this.state;\n\n    // User pressed the enter key\n    if (e.keyCode === 13) {\n      let temp=this.state.selectedIngredients;\n      if(!temp.includes(filteredSuggestions[activeSuggestion]))\n        temp.push(filteredSuggestions[activeSuggestion]);\n      this.setState({\n        activeSuggestion: 0,\n        showSuggestions: false,\n        userInput: filteredSuggestions[activeSuggestion],\n        selectedIngredients:temp\n      });\n    }\n    // User pressed the up arrow\n    else if (e.keyCode === 38) {\n      if (activeSuggestion === 0) {\n        return;\n      }\n\n      this.setState({ activeSuggestion: activeSuggestion - 1 });\n    }\n    // User pressed the down arrow\n    else if (e.keyCode === 40) {\n      if (activeSuggestion - 1 === filteredSuggestions.length) {\n        return;\n      }\n\n      this.setState({ activeSuggestion: activeSuggestion + 1 });\n    }\n  };\n\n  deleteIngredientHandler = (ingredientToDelete) => {\n    let temp=this.state.selectedIngredients;\n    temp.splice(ingredientToDelete,1);\n    this.setState({selectedIngredients:temp});\n  }\n\n  render() {\n    const {\n      onChange,\n      onClick,\n      onKeyDown,\n      state: {\n        activeSuggestion,\n        filteredSuggestions,\n        showSuggestions,\n        userInput\n      }\n    } = this;\n\n    let suggestionsListComponent;\n\n    if (showSuggestions && userInput) {\n      if (filteredSuggestions.length) {\n        suggestionsListComponent = (\n          <center><ul className={classes.suggestions}>\n            {filteredSuggestions.map((suggestion, index) => {\n              let className;\n\n              // Flag the active suggestion with a class\n              if (index === activeSuggestion) {\n                className = classes.suggestionactive;\n              }\n              return (\n                <div key={suggestion} >\n                  <li className={className}  onClick={onClick}>\n                    {suggestion}\n                  </li>\n                </div>\n              );\n            })}\n          </ul></center>\n        );\n      } else {\n        suggestionsListComponent = (\n          <div className={classes.nosuggestions}>\n            <center><em>No suggestions, you're on your own!</em></center>\n          </div>\n        );\n      }\n    }\n\n    let printSelectedIngredients= (<ul style={{listStyle:'none'}}>\n        {this.state.selectedIngredients.map((suggestion, index)=>{\n          return (<li onClick={()=>this.deleteIngredientHandler(index)} key={suggestion}>\n           {suggestion}\n          </li>);\n        })}\n        </ul>\n      );\n\n    return (\n      <Fragment>\n        <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\"></link>\n        <center className={classes.centerclass}>\n          <input\n            type=\"text\"\n            onChange={onChange}\n            onKeyDown={onKeyDown}\n            value={userInput}\n          />\n          <button type=\"submit\"><i className=\"fa fa-search\"></i></button>\n        {suggestionsListComponent}\n        <div className={classes.selected}>\n        <h3>Selected Ingredients</h3>\n        {printSelectedIngredients}\n        </div>\n        </center>\n      </Fragment>\n    );\n  }\n}\n\nexport default Autocomplete;\n"]},"metadata":{},"sourceType":"module"}